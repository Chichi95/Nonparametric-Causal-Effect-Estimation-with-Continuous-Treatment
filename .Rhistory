scale_fill_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#0089A7","#CC543A", rep("#BDC0BA",sample_size)))
ggplot() + geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, ymax=upper, ymin=lower),alpha=0.1,linetype=1,size = 0.06)
ggplot() + geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, ymax=upper, ymin=lower),alpha=0.1,linetype=1,size = 0.06,fill = labels)
ggplot(fill = labels) + geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, ymax=upper, ymin=lower),alpha=0.1,linetype=1,size = 0.06)
ggplot(data = data,fill = labels) + geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, ymax=upper, ymin=lower),alpha=0.1,linetype=1,size = 0.06)
data[which(data$sampleornot == 'ns'),]
data[which(data$sampleornot == 'ns'),]$lables
data[which(data$sampleornot == 'ns'),]
ggplot() + geom_ribbon(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, ymax=upper, ymin=lower),alpha=0.1,linetype=1,size = 0.06)
ggplot(data) + geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, ymax=upper, ymin=lower),alpha=0.1,linetype=1,size = 0.06)  +
data[which(data$sampleornot == 'ns'),]
ggplot(data) + geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(aes(ymax=upper, ymin=lower),
alpha=0.1,linetype=1,size = 0.06)
ggplot(data) + geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(aes(x = Treatment, ymax=upper, ymin=lower),
alpha=1,linetype=1,size = 1)
ggplot(data,fill = labels) + geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(aes(x = Treatment, ymax=upper, ymin=lower),
alpha=1,linetype=1,size = 1)
ggplot(data,aes(fill = labels)) + geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(aes(x = Treatment, ymax=upper, ymin=lower),
alpha=1,linetype=1,size = 1)
ggplot(data,aes(fill = labels)) + geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(aes(x = Treatment, ymax=upper, ymin=lower),
alpha=0.1,linetype=1,size = 1)  +
theme(legend.position="bottom") +
geom_line(data=data[which(data$sampleornot == 's'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_segment(x = -1 , xend = 1, y = 0.9, yend = 0.9, linetype="dashed", color = "black",size = 0.2) +
coord_cartesian(xlim = c(-1,1), ylim = c(-2,1)) +
theme(legend.position = "none") +
scale_color_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#0089A7","#CC543A", rep("#BDC0BA",sample_size))) +
scale_fill_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#0089A7","#CC543A", rep("#BDC0BA",sample_size)))
ggplot(data,aes(fill = labels)) + geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(aes(x = Treatment, ymax=upper, ymin=lower),
alpha=0.3,linetype=1,size = 1)  +
theme(legend.position="bottom") +
geom_line(data=data[which(data$sampleornot == 's'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_segment(x = -1 , xend = 1, y = 0.9, yend = 0.9, linetype="dashed", color = "black",size = 0.2) +
coord_cartesian(xlim = c(-1,1), ylim = c(-2,1)) +
theme(legend.position = "none") +
scale_color_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#0089A7","#CC543A", rep("#BDC0BA",sample_size))) +
scale_fill_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#0089A7","#CC543A", rep("#BDC0BA",sample_size)))
ggplot(data,aes(fill = labels)) + geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(aes(x = Treatment, ymax=upper, ymin=lower),
alpha=0.03,linetype=1,size = 1)  +
theme(legend.position="bottom") +
geom_line(data=data[which(data$sampleornot == 's'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_segment(x = -1 , xend = 1, y = 0.9, yend = 0.9, linetype="dashed", color = "black",size = 0.2) +
coord_cartesian(xlim = c(-1,1), ylim = c(-2,1)) +
theme(legend.position = "none") +
scale_color_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#0089A7","#CC543A", rep("#BDC0BA",sample_size))) +
scale_fill_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#0089A7","#CC543A", rep("#BDC0BA",sample_size)))
ggplot(data,aes(fill = labels)) + geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(aes(x = Treatment, ymax=upper, ymin=lower),
alpha=0.07,linetype=1,size = 0.1)  +
theme(legend.position="bottom") +
geom_line(data=data[which(data$sampleornot == 's'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_segment(x = -1 , xend = 1, y = 0.9, yend = 0.9, linetype="dashed", color = "black",size = 0.2) +
coord_cartesian(xlim = c(-1,1), ylim = c(-2,1)) +
theme(legend.position = "none") +
scale_color_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#0089A7","#CC543A", rep("#BDC0BA",sample_size))) +
scale_fill_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#0089A7","#CC543A", rep("#BDC0BA",sample_size)))
ggplot(data,aes(fill = labels)) + geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(aes(x = Treatment, ymax=upper, ymin=lower),
alpha=0.1,linetype=1,size = 0.1)  +
theme(legend.position="bottom") +
geom_line(data=data[which(data$sampleornot == 's'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_segment(x = -1 , xend = 1, y = 0.9, yend = 0.9, linetype="dashed", color = "black",size = 0.2) +
coord_cartesian(xlim = c(-1,1), ylim = c(-2,1)) +
theme(legend.position = "none") +
scale_color_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#0089A7","#CC543A", rep("#BDC0BA",sample_size))) +
scale_fill_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#0089A7","#CC543A", rep("#BDC0BA",sample_size)))
ggplot(data,aes(fill = labels)) + geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(aes(x = Treatment, ymax=upper, ymin=lower),
alpha=0.2,linetype=1,size = 0.1)  +
theme(legend.position="bottom") +
geom_line(data=data[which(data$sampleornot == 's'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_segment(x = -1 , xend = 1, y = 0.9, yend = 0.9, linetype="dashed", color = "black",size = 0.2) +
coord_cartesian(xlim = c(-1,1), ylim = c(-2,1)) +
theme(legend.position = "none") +
scale_color_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#0089A7","#CC543A", rep("#BDC0BA",sample_size))) +
scale_fill_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#0089A7","#CC543A", rep("#BDC0BA",sample_size)))
#show results
ggplot(data,aes(fill = labels)) +
geom_line(data=data[which(data$sampleornot == 's'),], aes(x=Treatment, y=Tau, color=labels), size = 0.1) +
geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(aes(x = Treatment, ymax=upper, ymin=lower),
alpha=0.2,linetype=1,size = 0.1)  +
theme(legend.position="bottom")  +
geom_segment(x = -1 , xend = 1, y = 0.9, yend = 0.9, linetype="dashed", color = "black",size = 0.2) +
coord_cartesian(xlim = c(-1,1), ylim = c(-2,1)) +
theme(legend.position = "none") +
scale_color_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#0089A7","#CC543A", rep("#BDC0BA",sample_size))) +
scale_fill_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#0089A7","#CC543A", rep("#BDC0BA",sample_size)))
ggplot(data,aes(fill = labels)) +
geom_line(data=data[which(data$sampleornot == 's'),], aes(x=Treatment, y=Tau, color=labels), size = 0.2) +
geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(aes(x = Treatment, ymax=upper, ymin=lower),
alpha=0.2,linetype=1,size = 0.1)  +
theme(legend.position="bottom")  +
geom_segment(x = -1 , xend = 1, y = 0.9, yend = 0.9, linetype="dashed", color = "black",size = 0.2) +
coord_cartesian(xlim = c(-1,1), ylim = c(-2,1)) +
theme(legend.position = "none") +
scale_color_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#0089A7","#CC543A", rep("#BDC0BA",sample_size))) +
scale_fill_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#0089A7","#CC543A", rep("#BDC0BA",sample_size)))
ggplot(data,aes(fill = labels)) +
geom_line(data=data[which(data$sampleornot == 's'),], aes(x=Treatment, y=Tau, color=labels), size = 0.2) +
geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(aes(x = Treatment, ymax=upper, ymin=lower),
alpha=0.2,linetype=1,size = 0.1)  +
theme(legend.position="bottom")  +
geom_segment(x = -1 , xend = 1, y = 0.9, yend = 0.9, linetype="dashed", color = "black",size = 0.2) +
coord_cartesian(xlim = c(-1,1), ylim = c(-2,1)) +
theme(legend.position = "none") +
scale_color_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#51A8DD","#CC543A", rep("#BDC0BA",sample_size))) +
scale_fill_manual(breaks = bk,
values = c("#7BA23F", "#51A8DD", "#0089A7","#CC543A", rep("#BDC0BA",sample_size)))
ggplot(data,aes(fill = labels)) +
geom_line(data=data[which(data$sampleornot == 's'),], aes(x=Treatment, y=Tau, color=labels), linetype = 3,size = 0.2) +
geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(aes(x = Treatment, ymax=upper, ymin=lower),
alpha=0.2,linetype=1,size = 0.1)  +
theme(legend.position="bottom")  +
geom_segment(x = -1 , xend = 1, y = 0.9, yend = 0.9, linetype="dashed", color = "black",size = 0.2) +
coord_cartesian(xlim = c(-1,1), ylim = c(-2,1)) +
theme(legend.position = "none") +
scale_color_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#51A8DD","#CC543A", rep("#BDC0BA",sample_size))) +
scale_fill_manual(breaks = bk,
values = c("#7BA23F", "#51A8DD", "#0089A7","#CC543A", rep("#BDC0BA",sample_size)))
ggplot(data,aes(fill = labels)) +
geom_line(data=data[which(data$sampleornot == 's'),], aes(x=Treatment, y=Tau, color=labels), linetype = 2,size = 0.2) +
geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(aes(x = Treatment, ymax=upper, ymin=lower),
alpha=0.2,linetype=1,size = 0.1)  +
theme(legend.position="bottom")  +
geom_segment(x = -1 , xend = 1, y = 0.9, yend = 0.9, linetype="dashed", color = "black",size = 0.2) +
coord_cartesian(xlim = c(-1,1), ylim = c(-2,1)) +
theme(legend.position = "none") +
scale_color_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#51A8DD","#CC543A", rep("#BDC0BA",sample_size))) +
scale_fill_manual(breaks = bk,
values = c("#7BA23F", "#51A8DD", "#0089A7","#CC543A", rep("#BDC0BA",sample_size)))
ggplot(data,aes(fill = labels)) +
geom_line(data=data[which(data$sampleornot == 's'),], aes(x=Treatment, y=Tau, color=labels), linetype = 2,size = 0.3) +
geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(aes(x = Treatment, ymax=upper, ymin=lower),
alpha=0.2,linetype=1,size = 0.1)  +
theme(legend.position="bottom")  +
geom_segment(x = -1 , xend = 1, y = 0.9, yend = 0.9, linetype="dashed", color = "black",size = 0.2) +
coord_cartesian(xlim = c(-1,1), ylim = c(-2,1)) +
theme(legend.position = "none") +
scale_color_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#51A8DD","#CC543A", rep("#BDC0BA",sample_size))) +
scale_fill_manual(breaks = bk,
values = c("#7BA23F", "#51A8DD", "#0089A7","#CC543A", rep("#BDC0BA",sample_size)))
#show results
ggplot(data,aes(fill = labels)) +
geom_line(data=data[which(data$sampleornot == 's'),], aes(x=Treatment, y=Tau, color=labels), linetype = 5,size = 0.3) +
geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(aes(x = Treatment, ymax=upper, ymin=lower),
alpha=0.2,linetype=1,size = 0.1)  +
theme(legend.position="bottom")  +
geom_segment(x = -1 , xend = 1, y = 0.9, yend = 0.9, linetype="dashed", color = "black",size = 0.2) +
coord_cartesian(xlim = c(-1,1), ylim = c(-2,1)) +
theme(legend.position = "none") +
scale_color_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#51A8DD","#CC543A", rep("#BDC0BA",sample_size))) +
scale_fill_manual(breaks = bk,
values = c("#7BA23F", "#51A8DD", "#0089A7","#CC543A", rep("#BDC0BA",sample_size)))
ggplot(data,aes(fill = labels)) +
geom_line(data=data[which(data$sampleornot == 's'),], aes(x=Treatment, y=Tau, color=labels), linetype = 8,size = 0.3) +
geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(aes(x = Treatment, ymax=upper, ymin=lower),
alpha=0.2,linetype=1,size = 0.1)  +
theme(legend.position="bottom")  +
geom_segment(x = -1 , xend = 1, y = 0.9, yend = 0.9, linetype="dashed", color = "black",size = 0.2) +
coord_cartesian(xlim = c(-1,1), ylim = c(-2,1)) +
theme(legend.position = "none") +
scale_color_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#51A8DD","#CC543A", rep("#BDC0BA",sample_size))) +
scale_fill_manual(breaks = bk,
values = c("#7BA23F", "#51A8DD", "#0089A7","#CC543A", rep("#BDC0BA",sample_size)))
ggplot(data,aes(fill = labels)) +
geom_line(data=data[which(data$sampleornot == 's'),], aes(x=Treatment, y=Tau, color=labels), linetype = 1,size = 0.3) +
geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(aes(x = Treatment, ymax=upper, ymin=lower),
alpha=0.2,linetype=1,size = 0.1)  +
theme(legend.position="bottom")  +
geom_segment(x = -1 , xend = 1, y = 0.9, yend = 0.9, linetype="dashed", color = "black",size = 0.2) +
coord_cartesian(xlim = c(-1,1), ylim = c(-2,1)) +
theme(legend.position = "none") +
scale_color_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#51A8DD","#CC543A", rep("#BDC0BA",sample_size))) +
scale_fill_manual(breaks = bk,
values = c("#7BA23F", "#51A8DD", "#0089A7","#CC543A", rep("#BDC0BA",sample_size)))
load("/Users/yichizhang/Desktop/tau_c_n1500_knn.RData")
source("NP_Causal_functions.R")
library(ggplot2)
library(expm)
set.seed(123)
run = 500
one <- rep(1,run);
tau_type <- 'c'
lt = length(T_candidate)
# if (tau_type == 'c'){
#   tau <- function(V,Tt){
#     return(as.numeric(0.05*exp(as.vector(V)*as.vector(Tt)) + 2*sin(4*Tt + 1)- 2*sin(1) - 0.05))
#   }
# } else {
#   tau <- function(V,Tt){
#     return(2.3*Tt + 1.2*Tt*V + 0.8*Tt*Tt + 0.05*Tt*V*V)
#   }
# }
T_candidate <- seq(-1,1,0.02)
X1 <- rep(0.5,length(T_candidate))
true_tau_grids <- tau(X1,T_candidate)
#sample curve
sample_size <- 50
index <- sample(1:run,sample_size)
tau_sample <- vector()
Treatment_sample <- vector()
labels_sample <- vector()
for (i in index){
fit_model = est_tau(as.matrix(X1),as.matrix(T_candidate),result[i][[1]], CI = T)
tau_sample = c(tau_sample, fit_model$tau)
Treatment_sample = c(Treatment_sample, T_candidate)
labels_sample = c(labels_sample, as.character(rep(i,length(T_candidate))))
}
#propose
candidate = matrix(0, nrow = run, ncol = length(T_candidate))
upper_CI = matrix(0, nrow = run, ncol = length(T_candidate))
lower_CI = matrix(0, nrow = run, ncol = length(T_candidate))
for (i in 1:run){
fit_model = est_tau(as.matrix(X1),as.matrix(T_candidate),result[i][[1]], CI = T)
candidate[i,] = fit_model$tau
upper_CI[i,] = fit_model$upper
lower_CI[i,] = fit_model$lower
}
est_tau_median = vector(); lower_empirical = vector(); upper_empirical = vector()
est_tau_mean = vector(); upper_est = vector(); lower_est = vector()
count = vector()
for (i in 1:length(T_candidate)){
est_tau_median = c(est_tau_median, median(candidate[,i]))
lower_empirical = c(lower_empirical, quantile(candidate[,i],0.95))
upper_empirical = c(upper_empirical, quantile(candidate[,i],0.05))
est_tau_mean = c(est_tau_mean, mean(candidate[,i]))
lower_est = c(lower_est, mean(upper_CI[,i]))
upper_est = c(upper_est, mean(lower_CI[,i]))
count = c(count, (one[which((upper_CI[,i] >= true_tau_grids[i]) & (lower_CI[,i] <= true_tau_grids[i]))] %>% sum) /run)
}
#kmeans
# plot_xt = cbind(X[,1],X[,2],as.vector(Tt))
# plot_xt0 = cbind(X[,1],X[,2],rep(0,length(Tt)))
# est_knn_1 = knn.reg(train = data_xt, test = plot_xt, data_y)$pred - knn.reg(train = data_xt, test = plot_xt0, data_y)$pred
# plot_xt2 = cbind(rep(X1,length(T_candidate)),T_candidate)
# est_knn_2 = knn.reg(train = cbind(X[,1],as.vector(Tt)), test = plot_xt2, est_knn_1)$pred
#build CI
# G = matrix(0,df1*df2,df1*df2)
# B = matrix(0,df1*df2,df1*df2)
# for (m in 1:n){
#   obj = m
#   q_hat = build_q_hat(q,df1*df2,obj)
#   G = G + (Tt[obj] - ET_X[obj]) * q_hat %*% psi_whole[obj,]
#   B = B + (Y[obj] - tau_samples[obj] - EY_XT0[obj])^2 * (Tt[obj] - ET_X[obj])^2 * q_hat %*% t(q_hat)
# }
# G = G/n
# B = B/n
# pre_A = 1/sqrt(df1*df2) * solve(G) %*% sqrtm(B)
# bound = rep(0,length(T_candidate))
# for (m in 1:length(T_candidate)){
#  A = bx_dot_bt_plot[m,] %*% pre_A
#  est_gamma = A %*% t(A)
#  bound[m] = 1.285 * sqrt(est_gamma * (df1*df2) / n)
# }
#generate data frame for ggplot
factor = c(rep("Proposed_Median",lt),rep("Proposed_Mean",lt),rep("Truth",lt),rep("Empirical Coverage Rate",lt), labels_sample)
data = data.frame(Treatment = c(rep(T_candidate,4),Treatment_sample), labels = factor,
Tau = c(est_tau_median,est_tau_mean,true_tau_grids,count,tau_sample),
upper = c(rep(NA,lt),rep(NA,lt),upper_empirical,upper_est,rep(NA,lt*sample_size)),
lower = c(rep(NA,lt),rep(NA,lt),lower_empirical,lower_est, rep(NA,lt*sample_size)),
sampleornot = c(rep('ns',4*lt), rep('s',lt*sample_size)))
data$labels = data$labels %>% as.vector
bk = c("Proposed_Median", "Proposed_Mean", "Truth", "Empirical Coverage Rate",index)
#show results
ggplot(data,aes(fill = labels)) +
geom_line(data=data[which(data$sampleornot == 's'),], aes(x=Treatment, y=Tau, color=labels), linetype = 1,size = 0.3) +
geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(aes(x = Treatment, ymax=upper, ymin=lower),
alpha=0.2,linetype=1,size = 0.1)  +
theme(legend.position="bottom")  +
geom_segment(x = -1 , xend = 1, y = 0.9, yend = 0.9, linetype="dashed", color = "black",size = 0.2) +
coord_cartesian(xlim = c(-1,1), ylim = c(-2,1)) +
theme(legend.position = "none") +
scale_color_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#51A8DD","#CC543A", rep("#BDC0BA",sample_size))) +
scale_fill_manual(breaks = bk,
values = c("#7BA23F", "#51A8DD", "#0089A7","#CC543A", rep("#BDC0BA",sample_size)))
load("/Users/yichizhang/Desktop/tau_c_n1500_knn.RData")
source("NP_Causal_functions.R")
library(ggplot2)
library(expm)
set.seed(123)
run = 500
one <- rep(1,run);
tau_type <- 'c'
lt = length(T_candidate)
# if (tau_type == 'c'){
#   tau <- function(V,Tt){
#     return(as.numeric(0.05*exp(as.vector(V)*as.vector(Tt)) + 2*sin(4*Tt + 1)- 2*sin(1) - 0.05))
#   }
# } else {
#   tau <- function(V,Tt){
#     return(2.3*Tt + 1.2*Tt*V + 0.8*Tt*Tt + 0.05*Tt*V*V)
#   }
# }
T_candidate <- seq(-1,1,0.02)
X1 <- rep(0.5,length(T_candidate))
true_tau_grids <- tau(X1,T_candidate)
#sample curve
sample_size <- 50
index <- sample(1:run,sample_size)
tau_sample <- vector()
Treatment_sample <- vector()
labels_sample <- vector()
for (i in index){
fit_model = est_tau(as.matrix(X1),as.matrix(T_candidate),result[i][[1]], CI = T)
tau_sample = c(tau_sample, fit_model$tau)
Treatment_sample = c(Treatment_sample, T_candidate)
labels_sample = c(labels_sample, as.character(rep(i,length(T_candidate))))
}
#propose
candidate = matrix(0, nrow = run, ncol = length(T_candidate))
upper_CI = matrix(0, nrow = run, ncol = length(T_candidate))
lower_CI = matrix(0, nrow = run, ncol = length(T_candidate))
for (i in 1:run){
fit_model = est_tau(as.matrix(X1),as.matrix(T_candidate),result[i][[1]], CI = T)
candidate[i,] = fit_model$tau
upper_CI[i,] = fit_model$upper
lower_CI[i,] = fit_model$lower
}
est_tau_median = vector(); lower_empirical = vector(); upper_empirical = vector()
est_tau_mean = vector(); upper_est = vector(); lower_est = vector()
count = vector()
for (i in 1:length(T_candidate)){
est_tau_median = c(est_tau_median, median(candidate[,i]))
lower_empirical = c(lower_empirical, quantile(candidate[,i],0.95))
upper_empirical = c(upper_empirical, quantile(candidate[,i],0.05))
est_tau_mean = c(est_tau_mean, mean(candidate[,i]))
lower_est = c(lower_est, mean(upper_CI[,i]))
upper_est = c(upper_est, mean(lower_CI[,i]))
count = c(count, (one[which((upper_CI[,i] >= true_tau_grids[i]) & (lower_CI[,i] <= true_tau_grids[i]))] %>% sum) /run)
}
#kmeans
# plot_xt = cbind(X[,1],X[,2],as.vector(Tt))
# plot_xt0 = cbind(X[,1],X[,2],rep(0,length(Tt)))
# est_knn_1 = knn.reg(train = data_xt, test = plot_xt, data_y)$pred - knn.reg(train = data_xt, test = plot_xt0, data_y)$pred
# plot_xt2 = cbind(rep(X1,length(T_candidate)),T_candidate)
# est_knn_2 = knn.reg(train = cbind(X[,1],as.vector(Tt)), test = plot_xt2, est_knn_1)$pred
#build CI
# G = matrix(0,df1*df2,df1*df2)
# B = matrix(0,df1*df2,df1*df2)
# for (m in 1:n){
#   obj = m
#   q_hat = build_q_hat(q,df1*df2,obj)
#   G = G + (Tt[obj] - ET_X[obj]) * q_hat %*% psi_whole[obj,]
#   B = B + (Y[obj] - tau_samples[obj] - EY_XT0[obj])^2 * (Tt[obj] - ET_X[obj])^2 * q_hat %*% t(q_hat)
# }
# G = G/n
# B = B/n
# pre_A = 1/sqrt(df1*df2) * solve(G) %*% sqrtm(B)
# bound = rep(0,length(T_candidate))
# for (m in 1:length(T_candidate)){
#  A = bx_dot_bt_plot[m,] %*% pre_A
#  est_gamma = A %*% t(A)
#  bound[m] = 1.285 * sqrt(est_gamma * (df1*df2) / n)
# }
#generate data frame for ggplot
factor = c(rep("Proposed_Median",lt),rep("Proposed_Mean",lt),rep("Truth",lt),rep("Empirical Coverage Rate",lt), labels_sample)
data = data.frame(Treatment = c(rep(T_candidate,4),Treatment_sample), labels = factor,
Tau = c(est_tau_median,est_tau_mean,true_tau_grids,count,tau_sample),
upper = c(rep(NA,lt),rep(NA,lt),upper_empirical,upper_est,rep(NA,lt*sample_size)),
lower = c(rep(NA,lt),rep(NA,lt),lower_empirical,lower_est, rep(NA,lt*sample_size)),
sampleornot = c(rep('ns',4*lt), rep('s',lt*sample_size)))
data$labels = data$labels %>% as.vector
bk = c("Proposed_Median", "Proposed_Mean", "Truth", "Empirical Coverage Rate",index)
source("NP_Causal_functions.R")
library(ggplot2)
library(expm)
set.seed(123)
run = 500
one <- rep(1,run);
tau_type <- 'c'
# if (tau_type == 'c'){
#   tau <- function(V,Tt){
#     return(as.numeric(0.05*exp(as.vector(V)*as.vector(Tt)) + 2*sin(4*Tt + 1)- 2*sin(1) - 0.05))
#   }
# } else {
#   tau <- function(V,Tt){
#     return(2.3*Tt + 1.2*Tt*V + 0.8*Tt*Tt + 0.05*Tt*V*V)
#   }
# }
T_candidate <- seq(-1,1,0.02)
lt = length(T_candidate)
X1 <- rep(0.5,length(T_candidate))
true_tau_grids <- tau(X1,T_candidate)
#sample curve
sample_size <- 50
index <- sample(1:run,sample_size)
tau_sample <- vector()
Treatment_sample <- vector()
labels_sample <- vector()
for (i in index){
fit_model = est_tau(as.matrix(X1),as.matrix(T_candidate),result[i][[1]], CI = T)
tau_sample = c(tau_sample, fit_model$tau)
Treatment_sample = c(Treatment_sample, T_candidate)
labels_sample = c(labels_sample, as.character(rep(i,length(T_candidate))))
}
#propose
candidate = matrix(0, nrow = run, ncol = length(T_candidate))
upper_CI = matrix(0, nrow = run, ncol = length(T_candidate))
lower_CI = matrix(0, nrow = run, ncol = length(T_candidate))
for (i in 1:run){
fit_model = est_tau(as.matrix(X1),as.matrix(T_candidate),result[i][[1]], CI = T)
candidate[i,] = fit_model$tau
upper_CI[i,] = fit_model$upper
lower_CI[i,] = fit_model$lower
}
est_tau_median = vector(); lower_empirical = vector(); upper_empirical = vector()
est_tau_mean = vector(); upper_est = vector(); lower_est = vector()
count = vector()
for (i in 1:length(T_candidate)){
est_tau_median = c(est_tau_median, median(candidate[,i]))
lower_empirical = c(lower_empirical, quantile(candidate[,i],0.95))
upper_empirical = c(upper_empirical, quantile(candidate[,i],0.05))
est_tau_mean = c(est_tau_mean, mean(candidate[,i]))
lower_est = c(lower_est, mean(upper_CI[,i]))
upper_est = c(upper_est, mean(lower_CI[,i]))
count = c(count, (one[which((upper_CI[,i] >= true_tau_grids[i]) & (lower_CI[,i] <= true_tau_grids[i]))] %>% sum) /run)
}
#kmeans
# plot_xt = cbind(X[,1],X[,2],as.vector(Tt))
# plot_xt0 = cbind(X[,1],X[,2],rep(0,length(Tt)))
# est_knn_1 = knn.reg(train = data_xt, test = plot_xt, data_y)$pred - knn.reg(train = data_xt, test = plot_xt0, data_y)$pred
# plot_xt2 = cbind(rep(X1,length(T_candidate)),T_candidate)
# est_knn_2 = knn.reg(train = cbind(X[,1],as.vector(Tt)), test = plot_xt2, est_knn_1)$pred
#build CI
# G = matrix(0,df1*df2,df1*df2)
# B = matrix(0,df1*df2,df1*df2)
# for (m in 1:n){
#   obj = m
#   q_hat = build_q_hat(q,df1*df2,obj)
#   G = G + (Tt[obj] - ET_X[obj]) * q_hat %*% psi_whole[obj,]
#   B = B + (Y[obj] - tau_samples[obj] - EY_XT0[obj])^2 * (Tt[obj] - ET_X[obj])^2 * q_hat %*% t(q_hat)
# }
# G = G/n
# B = B/n
# pre_A = 1/sqrt(df1*df2) * solve(G) %*% sqrtm(B)
# bound = rep(0,length(T_candidate))
# for (m in 1:length(T_candidate)){
#  A = bx_dot_bt_plot[m,] %*% pre_A
#  est_gamma = A %*% t(A)
#  bound[m] = 1.285 * sqrt(est_gamma * (df1*df2) / n)
# }
#generate data frame for ggplot
factor = c(rep("Proposed_Median",lt),rep("Proposed_Mean",lt),rep("Truth",lt),rep("Empirical Coverage Rate",lt), labels_sample)
data = data.frame(Treatment = c(rep(T_candidate,4),Treatment_sample), labels = factor,
Tau = c(est_tau_median,est_tau_mean,true_tau_grids,count,tau_sample),
upper = c(rep(NA,lt),rep(NA,lt),upper_empirical,upper_est,rep(NA,lt*sample_size)),
lower = c(rep(NA,lt),rep(NA,lt),lower_empirical,lower_est, rep(NA,lt*sample_size)),
sampleornot = c(rep('ns',4*lt), rep('s',lt*sample_size)))
data$labels = data$labels %>% as.vector
bk = c("Proposed_Median", "Proposed_Mean", "Truth", "Empirical Coverage Rate",index)
#show results
ggplot(data,aes(fill = labels)) +
geom_line(data=data[which(data$sampleornot == 's'),], aes(x=Treatment, y=Tau, color=labels), linetype = 1,size = 0.3) +
geom_line(data=data[which(data$sampleornot == 'ns'),], aes(x=Treatment, y=Tau, color=labels), size = 0.6) +
geom_ribbon(aes(x = Treatment, ymax=upper, ymin=lower),
alpha=0.2,linetype=1,size = 0.1)  +
theme(legend.position="bottom")  +
geom_segment(x = -1 , xend = 1, y = 0.9, yend = 0.9, linetype="dashed", color = "black",size = 0.2) +
coord_cartesian(xlim = c(-1,1), ylim = c(-2,1)) +
theme(legend.position = "none") +
scale_color_manual(breaks = bk,
values = c("#7BA23F", "#D19826", "#51A8DD","#CC543A", rep("#BDC0BA",sample_size))) +
scale_fill_manual(breaks = bk,
values = c("#7BA23F", "#51A8DD", "#0089A7","#CC543A", rep("#BDC0BA",sample_size)))
source('~/Desktop/Nonpara_Causal_Inference/Simulation/plot/plot_curve.R', echo=TRUE)
